<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jerry&#39;s Blog</title>
  
  <subtitle>Jerry的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jerrynju.github.io/"/>
  <updated>2018-02-04T03:10:01.744Z</updated>
  <id>https://jerrynju.github.io/</id>
  
  <author>
    <name>Jerry Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>相册页面测试</title>
    <link href="https://jerrynju.github.io/2018/02/04/%E7%9B%B8%E5%86%8C%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <id>https://jerrynju.github.io/2018/02/04/相册功能测试/</id>
    <published>2018-02-04T04:43:49.000Z</published>
    <updated>2018-02-04T03:10:01.744Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <p="">测试相册页面的功能<br><a id="more"></a><p></p><p><a href="https://jerryhexo-1255752747.cos.ap-chengdu.myqcloud.com/%E6%B5%8B%E8%AF%95%E5%9B%BE%E7%89%87PNG.png" title="图片测试" class="gallery-item" target="_blank" rel="noopener"><img src="https://jerryhexo-1255752747.cos.ap-chengdu.myqcloud.com/%E6%B5%8B%E8%AF%95%E5%9B%BE%E7%89%87PNG.png" alt="图片测试"></a></p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-gallery&quot; &lt;p=&quot;&quot;&gt;测试相册页面的功能&lt;br&gt;
    
    </summary>
    
      <category term="Photos" scheme="https://jerrynju.github.io/categories/Photos/"/>
    
    
      <category term="Mardown" scheme="https://jerrynju.github.io/tags/Mardown/"/>
    
      <category term="Writing" scheme="https://jerrynju.github.io/tags/Writing/"/>
    
      <category term="Photos" scheme="https://jerrynju.github.io/tags/Photos/"/>
    
  </entry>
  
  <entry>
    <title>《深入浅出WPF》学习笔记——XAML详解</title>
    <link href="https://jerrynju.github.io/2018/01/31/XAML/"/>
    <id>https://jerrynju.github.io/2018/01/31/XAML/</id>
    <published>2018-01-31T08:45:30.000Z</published>
    <updated>2018-02-03T05:21:14.093Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <div=""><p>本文主要内容整理自水利水电出版社刘铁猛著《深入浅出WPF》一书</p></div><h1 id="XAML"><a href="#XAML" class="headerlink" title="XAML"></a>XAML</h1><h2 id="XAML基础"><a href="#XAML基础" class="headerlink" title="XAML基础"></a>XAML基础</h2><p>XAML全称Extensible Application Markup Language，是一种用来描述图形用户界面的标记语言。它的目的是实现程序视图和逻辑代码之间的解耦。</p><p>XAML是一种“声明”式的语言，当我们见到一个标签，就意味着声明了一个对象，对象之间的关系要么是并列，要么是包含。</p><a id="more"></a><h3 id="WPF项目文件"><a href="#WPF项目文件" class="headerlink" title="WPF项目文件"></a>WPF项目文件</h3><ol><li>Properties：程序用到的资源（如图标、图片、静态字符串）和配置信息。</li><li>References：标记了这个项目需要引用的其他项目。里面包含.NET Framework里的类库。</li><li>App.xaml：程序的主体。在Windows系统中，一个程序就是一个进程（Process），一个GUI进程必须要有一个窗体作为主窗体，该文件定义了程序的进程和主窗体。</li><li>MainWindow.xaml：程序的主窗体。</li></ol><h3 id="最简单的XAML代码"><a href="#最简单的XAML代码" class="headerlink" title="最简单的XAML代码"></a>最简单的XAML代码</h3><p>XAML由XML派生而来，使用标签对声明一个元素（每个元素对应内存中的一个对象），可以给元素的特征（Attribute）赋值。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">非空标签：</span><br><span class="line"><span class="tag">&lt;<span class="name">Tag</span> <span class="attr">Attribute1</span>=<span class="string">Value1</span> <span class="attr">Attribute2</span>=<span class="string">Value2</span>&gt;</span>Content<span class="tag">&lt;/<span class="name">Tag</span>&gt;</span></span><br><span class="line">空标签：</span><br><span class="line"><span class="tag">&lt;<span class="name">Tag</span> <span class="attr">Attribute1</span>=<span class="string">Value1</span> <span class="attr">Attribute2</span>=<span class="string">Value2/</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note info"><p>Attribute和Property的区别：<br>Property属于面向对象理论范畴，用于对对象性质进行抽象，而Attribute属于编程语言文法范畴，与区分同类语法元素。</p></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">XAML的基本结构：</span><br><span class="line"><span class="tag">&lt;<span class="name">Window</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">    ......</span><br><span class="line">  <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Window</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Window</span>&gt;</span>标签的Attribute详解：</span><br><span class="line"> x:Class="MyWpfApp.Window1"</span><br><span class="line">  //指定XAML文件编译成的C#类名，与Window1.xaml.cs均使用了partial关键字，编译后组合</span><br><span class="line"> xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span><br><span class="line">  //对应绘制UI相关程序集</span><br><span class="line"> xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"</span><br><span class="line">  //对应XAML语言处理相关程序集</span><br><span class="line"> Title="Window1" Height="300" Width="300"</span><br></pre></td></tr></table></figure><p>xmlns是XML-namespace的缩写，其特征语法为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlns[:可选的映射前缀]-“名称空间”</span><br></pre></td></tr></table></figure><p>没有可选映射前缀的名称空间为默认名称空间，只能有一个。</p><p>名称空间看上去像网页地址，是因为这是XAML解析器的一个硬性编码（hard-coding），遇到这些特定的字符串，相应的Assembly和Namespace就会引入进来。</p><h3 id="XAML和C-的对应关系"><a href="#XAML和C-的对应关系" class="headerlink" title="XAML和C#的对应关系"></a>XAML和C#的对应关系</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Window</span></span></span><br><span class="line"><span class="tag">    <span class="attr">x:Class</span>=<span class="string">"SimpleWPF.MainWindow"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:x</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:d</span>=<span class="string">"http://schemas.microsoft.com/expression/blend/2008"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:local</span>=<span class="string">"clr-namespace:SimpleWPF"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:mc</span>=<span class="string">"http://schemas.openxmlformats.org/markup-compatibility/2006"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Width</span>=<span class="string">"525"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Height</span>=<span class="string">"350"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">mc:Ignorable</span>=<span class="string">"d"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Title</span>=<span class="string">"MainWindow"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Click</span>=<span class="string">"Button_Click"</span> <span class="attr">Content</span>=<span class="string">"Click Me!"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">Window</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面的XAML代码等价于CSharp代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Controls;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SimpleWPF</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> b = <span class="keyword">new</span> Button</span><br><span class="line">            &#123;</span><br><span class="line">                Content = <span class="string">"Click me!"</span></span><br><span class="line">            &#125;;</span><br><span class="line">            b.Click += (sender, e) =&gt;</span><br><span class="line">              &#123;</span><br><span class="line">                  b.Content = <span class="string">"Clicked"</span>;</span><br><span class="line">              &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> w = <span class="keyword">new</span> Window</span><br><span class="line">            &#123;</span><br><span class="line">                Title = <span class="string">"A Simple WPF Demo"</span>,</span><br><span class="line">                Content=b</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> app = <span class="keyword">new</span> App();</span><br><span class="line">            app.Run(w);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info"><p>上面两个程序都会被视为项目程序入口，在生成的时候会发生冲突。可以通过<strong>项目-属性-启动对象</strong>进行设置。</p></div><h3 id="XAML和C-引用外部程序集的方法"><a href="#XAML和C-引用外部程序集的方法" class="headerlink" title="XAML和C#引用外部程序集的方法"></a>XAML和C#引用外部程序集的方法</h3><h4 id="XAML-1"><a href="#XAML-1" class="headerlink" title="XAML"></a>XAML</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">如果要引用PresentationFramework.dll Assembly中的System.Windows.Controls,</span><br><span class="line">在根元素的起始标签加上：</span><br><span class="line">xmlns:c="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"</span><br><span class="line">使用其中的元素的方法：</span><br><span class="line"><span class="tag">&lt;<span class="name">c:Button</span>&gt;</span>...<span class="tag">&lt;/<span class="name">c:Button</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="C"><a href="#C" class="headerlink" title="C"></a>C</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">将PresentationFramework.dll添加到项目引用中，并在代码顶部加上</span><br><span class="line"><span class="keyword">using</span> System.Windows.Controls;</span><br></pre></td></tr></table></figure><h3 id="为对象属性赋值"><a href="#为对象属性赋值" class="headerlink" title="为对象属性赋值"></a>为对象属性赋值</h3><h4 id="Attribute简单赋值"><a href="#Attribute简单赋值" class="headerlink" title="Attribute简单赋值"></a>Attribute简单赋值</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Window</span> <span class="attr">x:Class</span>=<span class="string">"WpfApplicationTree.Windowl"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns</span>=<span class="string">"http://schcmas.microsoft.com/winfx/2006/xamI/prescnlation"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:x</span>=<span class="string">"http://schcmas.microsoft.com/winfx/2006/xaml"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Title</span>=<span class="string">"Window"</span> <span class="attr">Height</span>=<span class="string">"188"</span> <span class="attr">Width</span>=<span class="string">"300"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">VerticalAligmnent</span>=<span class="string">"Center"</span> <span class="attr">HorizontalAlignment</span>=<span class="string">"Center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Rectangle</span> <span class="attr">x:Name</span>=<span class="string">"rectangle"</span> <span class="attr">Width</span>=<span class="string">"200"</span> <span class="attr">Height</span>=<span class="string">"120"</span> <span class="attr">Fill</span>=<span class="string">"Blue"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Window〉</span></span></span><br></pre></td></tr></table></figure><h4 id="复杂赋值"><a href="#复杂赋值" class="headerlink" title="复杂赋值"></a><property>复杂赋值</property></h4><p>这种赋值方式也可以写成下面效果相同的代码：</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid</span> <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span> <span class="attr">HorizontalAlignment</span>=<span class="string">"Center"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Rectangle</span> <span class="attr">x:Name</span>=<span class="string">"rectangle"</span> <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">Height</span>=<span class="string">"120"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Rectangle.Fill</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">SolidColorBrush</span> <span class="attr">Color</span>=<span class="string">"Blue"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Rectangle.Fill</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Rectangle</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="标记扩展"><a href="#标记扩展" class="headerlink" title="标记扩展"></a>标记扩展</h3><p>标记扩展是一种特殊的Attribute=Value赋值语法，例如在下面的代码中，Slider的值绑定在了TextBox的Text属性上。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Window</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">Text</span>=<span class="string">"&#123;Binding ElementName=slider1,Path=Value,Mode=OneWay&#125;"</span> <span class="attr">Margin</span>=<span class="string">"5"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Slider</span> <span class="attr">x:Name</span>=<span class="string">"slider1"</span> <span class="attr">Margin</span>=<span class="string">"5"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Window</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当编译器看到花括号中的内容时，会将其中的内容解析成相应的对象。其中对象的数据类型是紧邻左花括号的字符串，右侧字符串则是属性。</p><p>这种标记扩展仍然可以写成属性标签的形式。</p><div class="note info"><p>注意：</p><ul><li>标记扩展语法只适用于标记扩展类的派生类，在XAML中使用时，类名中的Extension可以省略；</li><li>标记扩展可以嵌套，也可以省略“=”前的参数名；</li></ul></div><h3 id="XAML中的Event-Handler"><a href="#XAML中的Event-Handler" class="headerlink" title="XAML中的Event Handler"></a>XAML中的Event Handler</h3><p>WPF支持在XAML中使用Attribute赋值的方式为对象的Event指定Event Handler。比如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">x:Name</span>=<span class="string">"button1"</span> <span class="attr">Click</span>=<span class="string">"button1_Click"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>这种特性加上.NET的Partial类特性，可以实现代码后置，即将逻辑代码与UI代码分离。但是，我们也可以使用下面的代码将后置的C#代码置入到XAML文件中。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">x:Code</span>&gt;</span></span><br><span class="line">  &lt;![CDATA[</span><br><span class="line">private void button1_Click(object sender, RoutedEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show("Code-Behind!");</span><br><span class="line">&#125;</span><br><span class="line">  ]]&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">x:Code</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>XAML中的注释语法为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注释内容--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="x名称空间中的成员"><a href="#x名称空间中的成员" class="headerlink" title="x名称空间中的成员"></a>x名称空间中的成员</h2><h3 id="出现在Attribute中的成员"><a href="#出现在Attribute中的成员" class="headerlink" title="出现在Attribute中的成员"></a>出现在Attribute中的成员</h3><ul><li>x:Class, 将XAML标签中的编译结果与后台代码中指定的类合并。</li><li>x:ClassModifier, 指定该标签编译生成的类的访问控制级别。</li><li>x:Name, 为该标签声明一个变量，可以在后台代码中直接通过变量名引用该标签。与标签的Name属性功能相同。</li><li>x:FieldModifier, 改变控件引用变量的访问级别，需要有x:Name属性。</li><li>x:Key, 用于定义资源字典中条目的键值。</li><li>x:Shared, 与x:Key一起使用，值为True时，得到的是同一个对象，False则为对象的副本。</li></ul><h4 id="出现在标记扩展中的成员"><a href="#出现在标记扩展中的成员" class="headerlink" title="出现在标记扩展中的成员"></a>出现在标记扩展中的成员</h4><ul><li>x:Type, 对所有数据类型的抽象，用于标记未知的数据类型。</li><li>x:Null, 空值类型。</li><li>x:Array, 提供一个ArrayList作为数据源。</li><li>x:Static, 用于访问数据类型的属性或字段。常用于程序的国际化。</li></ul><h4 id="指令元素"><a href="#指令元素" class="headerlink" title="指令元素"></a>指令元素</h4><ul><li>x:Code, 放置C#代码。</li><li>x:XData, 在XAML放置XML格式的数据。</li></ul><h2 id="控件"><a href="#控件" class="headerlink" title="控件"></a>控件</h2><h3 id="ContentControl族"><a href="#ContentControl族" class="headerlink" title="ContentControl族"></a>ContentControl族</h3><table><thead><tr><th>Button</th><th>ButtonBase</th><th>CheckBox</th><th>ComboBoxItem</th></tr></thead><tbody><tr><td>ContentControl</td><td>Frame</td><td>GridViewColumnHeader</td><td>Groupltem</td></tr><tr><td>Label</td><td>ListBoxItem</td><td>ListViewItem</td><td>Navigation  Window</td></tr><tr><td>RadioButton</td><td>RepcatButton</td><td>ScrollViewer</td><td>StatusBarltem</td></tr><tr><td>Toggle Button</td><td>ToolTip</td><td>UserControl</td><td>Window</td></tr></tbody></table><ul><li>只能由单一元素充当其内容</li></ul><h3 id="HeaderContentControl族"><a href="#HeaderContentControl族" class="headerlink" title="HeaderContentControl族"></a>HeaderContentControl族</h3><table><thead><tr><th>Expander</th><th>GroupBox</th><th>HeaderedContentC ontrol</th><th>Tabltem</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr></tbody></table><ul><li>包含Content和Header属性，每个都只能容纳一个元素。</li></ul><h3 id="ItemsControl族"><a href="#ItemsControl族" class="headerlink" title="ItemsControl族"></a>ItemsControl族</h3><table><thead><tr><th>Menu</th><th>MenuBase</th><th>ContextMenu</th><th>ComboBox</th></tr></thead><tbody><tr><td>ItemsControl</td><td>ListBox</td><td>List  View</td><td>TabControl</td></tr><tr><td>Tree View</td><td>Selector</td><td>StatusBar</td></tr></tbody></table><ul><li>用于显示列表化数据</li><li>内容属性为Items或ItemSource</li><li>每种ItemsControl都有自己对应的Item Container</li><li>提交给ItemsControl的内容一定是一个集合</li><li>ItemsControl会自动对集合元素进行包装，只需直接修改原数据。</li></ul><h3 id="HeaderedItemsControl族"><a href="#HeaderedItemsControl族" class="headerlink" title="HeaderedItemsControl族"></a>HeaderedItemsControl族</h3><table><thead><tr><th>MenuItem</th><th>TreeViewItem</th><th>ToolBar</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h3 id="Decorator族"><a href="#Decorator族" class="headerlink" title="Decorator族"></a>Decorator族</h3><table><thead><tr><th>ButtonChrome</th><th>ClassicBorderDecorator</th><th>ListBoxChrome</th><th>SystemDropShadowChrome</th></tr></thead><tbody><tr><td>Border</td><td>InkPresentcr</td><td>BulletDecorator</td><td>Viewbox</td></tr><tr><td>AdornerDecorator</td><td></td><td></td></tr></tbody></table><ul><li>起UI装饰作用</li><li>内容属性为Child</li><li>内容为单一元素</li></ul><h3 id="TextBlock和TextBox"><a href="#TextBlock和TextBox" class="headerlink" title="TextBlock和TextBox"></a>TextBlock和TextBox</h3><ul><li>TextBlock只能显示文本，不能编辑。但是可以提供丰富的排版效果。内容属性为“Inlines”。</li><li>TextBox可以编辑，但是内容是简单字符串。内容属性为“Text”。</li></ul><h3 id="Shape族"><a href="#Shape族" class="headerlink" title="Shape族"></a>Shape族</h3><ul><li>用于2D图形绘制</li><li>为内容属性</li><li>使用Fill填充，Stroke设置边线</li></ul><h3 id="Panel族"><a href="#Panel族" class="headerlink" title="Panel族"></a>Panel族</h3><table><thead><tr><th>Canvas</th><th>DockPanel</th><th>Grid</th><th>TabPanel</th></tr></thead><tbody><tr><td>ToolBarOverflowPanel</td><td>StackPanel</td><td>ToolBarPanel</td><td>UniformGrid</td></tr><tr><td>VirtualizingPanel</td><td>VirtualizingStack Panel</td><td>WrapPanel</td></tr></tbody></table><ul><li>重要布局元素，所有用于UI布局的元素都属于这一族。</li><li>内容属性Children。</li><li>内容可以是多个元素，由Panel控制布局。</li></ul><h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><h3 id="常用布局元素"><a href="#常用布局元素" class="headerlink" title="常用布局元素"></a>常用布局元素</h3><ul><li>Grid：网格。通过自定义行、列来调整控件布局。</li><li>StackPanel：栈式面板。将元素以竖直或水平方向直线排列。</li><li>Canvas：画布。使用像素为单位的绝对坐标定位元素。</li><li>DockPanel：泊靠式面板。内部元素可选择泊靠方向。</li><li>WrapPanel：自动换行面板。内部元素可自动换行。</li></ul><h3 id="布局元素的尺寸单位"><a href="#布局元素的尺寸单位" class="headerlink" title="布局元素的尺寸单位"></a>布局元素的尺寸单位</h3><ul><li>绝对值：double竖直加上单位。单位有px,in=96px,cm=(96/2.54)px,pt=(96/72)px.</li><li>比例值：double竖直加上”*“。解析器会把所有比例值的竖直加起来对未被占用空间总数加权平均。</li><li>自动值：字符串Auto。</li></ul><h3 id="Grid"><a href="#Grid" class="headerlink" title="Grid"></a>Grid</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Margin</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">"Auto"</span> <span class="attr">MinWidth</span>=<span class="string">"120"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">"*"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">"80"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">"4"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">"80"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"25"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"4"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"*"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"25"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">"请选择您的部门并留言："</span> <span class="attr">Grid.Column</span>=<span class="string">"0"</span> <span class="attr">Grid.Row</span>=<span class="string">"0"</span> <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ComboBox</span> <span class="attr">Grid.Column</span>=<span class="string">"1"</span> <span class="attr">Grid.Row</span>=<span class="string">"0"</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">"4"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">Grid.Column</span>=<span class="string">"0"</span> <span class="attr">Grid.Row</span>=<span class="string">"2"</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">"5"</span> <span class="attr">BorderBrush</span>=<span class="string">"Black"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">"提交"</span> <span class="attr">Grid.Column</span>=<span class="string">"2"</span> <span class="attr">Grid.Row</span>=<span class="string">"4"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">"清除"</span> <span class="attr">Grid.Column</span>=<span class="string">"4"</span> <span class="attr">Grid.Row</span>=<span class="string">"4"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="/XAML-01.png" title="XAML-01" class="gallery-item"><img src="/XAML-01.png" alt="XAML-01"></a></p><h3 id="StackPanel"><a href="#StackPanel" class="headerlink" title="StackPanel"></a>StackPanel</h3><ul><li>三个属性：Orientation，HorizontalAlignment，VerticalAlignment。</li><li>其中某一条目变动后，其后的条目会自动移动。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">GroupBox</span> <span class="attr">Header</span>=<span class="string">"请选择没有错别字的成语"</span> <span class="attr">BorderBrush</span>=<span class="string">"Black"</span> <span class="attr">Margin</span>=<span class="string">"5"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Margin</span>=<span class="string">"5"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">Content</span>=<span class="string">"A. 迫不及待"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">Content</span>=<span class="string">"B. 迫不及待"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">Content</span>=<span class="string">"C. 迫不及待"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">Content</span>=<span class="string">"D. 迫不及待"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">Content</span>=<span class="string">"E. 迫不及待"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">Orientation</span>=<span class="string">"Horizontal"</span> <span class="attr">HorizontalAlignment</span>=<span class="string">"Right"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">"清空"</span> <span class="attr">Width</span>=<span class="string">"60"</span> <span class="attr">Margin</span>=<span class="string">"5"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">"确定"</span> <span class="attr">Width</span>=<span class="string">"60"</span> <span class="attr">Margin</span>=<span class="string">"5"</span>/&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">GroupBox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="/XAML-02.png" title="XAML-02" class="gallery-item"><img src="/XAML-02.png" alt="XAML-02"></a></p><h3 id="Canvas"><a href="#Canvas" class="headerlink" title="Canvas"></a>Canvas</h3><p>Canvas的使用场合：</p><ul><li>一经设计就基本不会再改动的小型布局（如图标）。</li><li>艺术性较强的布局。</li><li>需要大量坐标定位的布局。</li><li>动画依赖横纵坐标。</li></ul><h3 id="DockPanel"><a href="#DockPanel" class="headerlink" title="DockPanel"></a>DockPanel</h3><ul><li>DockPanel中的元素会被赋予DockPanel.Dock属性，它是一个枚举类型，具有Left、Top、Right、Bottom四个值。</li><li>DockPanel具有一个LastChildFill属性，默认值为True，作用是使用最后一个元素填充所有剩余空间。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DockPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">DockPanel.Dock</span>=<span class="string">"Top"</span> <span class="attr">Height</span>=<span class="string">"25"</span> <span class="attr">BorderBrush</span>=<span class="string">"Black"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">DockPanel.Dock</span>=<span class="string">"Left"</span> <span class="attr">Width</span>=<span class="string">"150"</span> <span class="attr">BorderBrush</span>=<span class="string">"Black"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">BorderBrush</span>=<span class="string">"Black"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">DockPanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="/XAML-03.png" title="XAML-03" class="gallery-item"><img src="/XAML-03.png" alt="XAML-03"></a></p><h3 id="WrapPanel"><a href="#WrapPanel" class="headerlink" title="WrapPanel"></a>WrapPanel</h3><ul><li>WrapPanel内部采用流失布局，在流延伸方向上排列尽可能多的空间，排不下的会新起一行。</li><li>Orientation属性控制延伸方向，HorizonalAlignment和VerticalAlignment控制内部对齐。</li></ul><h1 id="WPF内部原理"><a href="#WPF内部原理" class="headerlink" title="WPF内部原理"></a>WPF内部原理</h1><blockquote class="blockquote-center"><p>生产工具的先进程度代表了生产力水平</p></blockquote><blockquote class="blockquote-center"><p>内容决定形式</p></blockquote><h2 id="Data-Binding"><a href="#Data-Binding" class="headerlink" title="Data Binding"></a>Data Binding</h2><ul><li>数据在存储、逻辑、展示三个层流通</li><li>算法一般分布在下面几处，其中3是程序的核心，1、2相对成熟稳定、复用性高，4、5的处理不当会消耗大量精力。<ol><li>数据库内部</li><li>读取和写回数据</li><li>业务逻辑</li><li>数据展示</li><li>界面与逻辑的交互</li></ol></li></ul><h3 id="一个简单的Binding实例"><a href="#一个简单的Binding实例" class="headerlink" title="一个简单的Binding实例"></a>一个简单的Binding实例</h3><p>这是一个简单的Binding例子，点击界面中的Button以后，TextBox中的内容会同步更新。</p><p>MainWindow.XAML中的代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">x:Name</span>=<span class="string">"tbox"</span> <span class="attr">BorderBrush</span>=<span class="string">"Black"</span> <span class="attr">Margin</span>=<span class="string">"5"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Content</span>=<span class="string">"Add Age"</span> <span class="attr">Margin</span>=<span class="string">"5"</span> <span class="attr">Click</span>=<span class="string">"Button_Click"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p>新建一个Student类文件：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SimpleWPF</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Student</span>:<span class="title">INotifyPropertyChanged</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> PropertyChangedEventHandler PropertyChanged;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">string</span> name;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> name;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                name = <span class="keyword">value</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>.PropertyChanged != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">this</span>.PropertyChanged.Invoke(<span class="keyword">this</span>, <span class="keyword">new</span> PropertyChangedEventArgs(<span class="string">"Name"</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MainWindow.xaml.cs中的代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">    &#123;</span><br><span class="line">        Student stu;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line"></span><br><span class="line">            stu = <span class="keyword">new</span> Student();</span><br><span class="line"></span><br><span class="line">            Binding binding = <span class="keyword">new</span> Binding <span class="comment">//新建Binding实例</span></span><br><span class="line">            &#123;</span><br><span class="line">                Source = stu,   <span class="comment">//为Binding指定数据源</span></span><br><span class="line">                Path = <span class="keyword">new</span> PropertyPath(<span class="string">"Name"</span>) <span class="comment">//指定要访问的Binding属性</span></span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            BindingOperations.SetBinding(<span class="keyword">this</span>.tbox, TextBox.TextProperty, binding); <span class="comment">//指定Binding对象</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Button_Click</span>(<span class="params"><span class="keyword">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            stu.Name += <span class="string">"Name"</span>;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的Binding操作也可以写成下面的简化形式：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.tbox.SetBinding(TextBox.TextProperty,<span class="keyword">new</span> Binding(<span class="string">"Name"</span>)&#123;Source=stu=<span class="keyword">new</span> Student()&#125;);</span><br></pre></td></tr></table></figure><h3 id="Binding的源"><a href="#Binding的源" class="headerlink" title="Binding的源"></a>Binding的源</h3><p>上面的例子中Binding的源是一个对象，这个通过Property公开了自己的数据。为了使该对象在属性值变化值自动通知Binding，该对象的类实现了INotifyPropertyChanged接口，并且在属性的Set语句中激发PropertyChanged事件。</p><p>Binding的源还可以有下面几种情况：</p><h3 id="控件作为Binding源和Binding标记扩展"><a href="#控件作为Binding源和Binding标记扩展" class="headerlink" title="控件作为Binding源和Binding标记扩展"></a>控件作为Binding源和Binding标记扩展</h3><p>下面这个例子将一个TextBox中的值与一个Slider相关联：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">x:Name</span>=<span class="string">"textBox1"</span> <span class="attr">Text</span>=<span class="string">"&#123;Binding Path=Value, ElementName=Slider1&#125;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Slider</span> <span class="attr">x:Name</span>=<span class="string">"Slider1"</span> <span class="attr">Maximum</span>=<span class="string">"100"</span> <span class="attr">Minimum</span>=<span class="string">"0"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这种在界面层的直接设置无须涉及逻辑层，它与下面的C#代码等价：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.textBox1.SetBinding(TextBox.TextProperty,<span class="keyword">new</span> Binding(<span class="string">"Value"</span>)&#123;ElementName=<span class="string">"Slider1"</span>&#125;);</span><br></pre></td></tr></table></figure><h3 id="Binding的方向和数据更新"><a href="#Binding的方向和数据更新" class="headerlink" title="Binding的方向和数据更新"></a>Binding的方向和数据更新</h3><ul><li>Binding的属性”Mode”控制数据流向，可枚举的值为：TwoWay、OneWay、OnTime、OneWayToSource和Default。</li><li>Binding的属性”UpdateSourceTrigger”控制Binding的数据更新，可枚举的值为：PropertyChanged、LostFocus、Explicit和Default。</li></ul><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-gallery&quot; &lt;div=&quot;&quot;&gt;&lt;p&gt;本文主要内容整理自水利水电出版社刘铁猛著《深入浅出WPF》一书&lt;/p&gt;&lt;/div&gt;
&lt;h1 id=&quot;XAML&quot;&gt;&lt;a href=&quot;#XAML&quot; class=&quot;headerlink&quot; title=&quot;XAML&quot;&gt;&lt;/a&gt;XAML&lt;/h1&gt;&lt;h2 id=&quot;XAML基础&quot;&gt;&lt;a href=&quot;#XAML基础&quot; class=&quot;headerlink&quot; title=&quot;XAML基础&quot;&gt;&lt;/a&gt;XAML基础&lt;/h2&gt;&lt;p&gt;XAML全称Extensible Application Markup Language，是一种用来描述图形用户界面的标记语言。它的目的是实现程序视图和逻辑代码之间的解耦。&lt;/p&gt;
&lt;p&gt;XAML是一种“声明”式的语言，当我们见到一个标签，就意味着声明了一个对象，对象之间的关系要么是并列，要么是包含。&lt;/p&gt;
    
    </summary>
    
      <category term="Techniques" scheme="https://jerrynju.github.io/categories/Techniques/"/>
    
    
      <category term="学习笔记" scheme="https://jerrynju.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="WPF" scheme="https://jerrynju.github.io/tags/WPF/"/>
    
      <category term="程序开发" scheme="https://jerrynju.github.io/tags/%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Teaching Notes of AP-Calculus</title>
    <link href="https://jerrynju.github.io/2018/01/30/AP-Calculus/"/>
    <id>https://jerrynju.github.io/2018/01/30/AP-Calculus/</id>
    <published>2018-01-30T04:41:30.000Z</published>
    <updated>2018-01-30T04:45:27.416Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <p="">AP微积分考试的相关内容，持续更新中<br><a id="more"></a><p></p><h1 id="考试要求"><a href="#考试要求" class="headerlink" title="考试要求"></a>考试要求</h1><h2 id="AB"><a href="#AB" class="headerlink" title="AB"></a>AB</h2><h3 id="Ⅰ-掌握好下面的基础知识-Basic-Facts"><a href="#Ⅰ-掌握好下面的基础知识-Basic-Facts" class="headerlink" title="Ⅰ.掌握好下面的基础知识(Basic Facts)"></a>Ⅰ.掌握好下面的基础知识(Basic Facts)</h3><ul><li>基本初等函数(Common Functions)的导数(Derivatives)和不定积分(Antiderivatives)；</li><li>导数的积(Product)、导数的商(Quotient)和导数的链式法则(Chain Rules)；</li><li>使用矩形(Rectangle)的左边(Left)、中点(Midpoint)或右边(Right)估算定积分，使用梯形法则(Trapezoid Rules)估算定积分(Definite Integrals)；</li><li>重要的定理：罗尔定理(Rolle’s Theorem)，中值定理(The Mean Value Theorem)和微积分基本定理(The Fundamental Theorem of Calculus)；</li></ul><h3 id="Ⅱ-理解导数是一个瞬时的变化比率，并且能够应用这个概念"><a href="#Ⅱ-理解导数是一个瞬时的变化比率，并且能够应用这个概念" class="headerlink" title="Ⅱ.理解导数是一个瞬时的变化比率，并且能够应用这个概念"></a>Ⅱ.理解导数是一个瞬时的变化比率，并且能够应用这个概念</h3><ul><li>求方程（Equation）的切线（Tangent Line）；</li><li>确定函数在那个地方是上升/下降（Increasing/Decreasing），向上/向下凹下（Concave Up/Down），以及取得最大值/最小值(Maxima/Minima)和拐点(Inflection)；</li><li>在运动中分析一个物体的瞬时速度(Speed)、速度(Velocity)和加速度(Acceleration)；必要时，运用隐函数求导(Implicit Differentiation)的方式解决变化率(Rates)问题；</li></ul><h3 id="Ⅲ-理解积分是代表着基于不定积分的累加函数，并能够运用这个概念："><a href="#Ⅲ-理解积分是代表着基于不定积分的累加函数，并能够运用这个概念：" class="headerlink" title="Ⅲ.理解积分是代表着基于不定积分的累加函数，并能够运用这个概念："></a>Ⅲ.理解积分是代表着基于不定积分的累加函数，并能够运用这个概念：</h3><ul><li>函数的平均值(Average Value)；</li><li>面积(Area)和体积(Volume)；</li><li>运动对象的位置(Position)和运动距离(Distance)；</li><li>给定一个比例(Accumulation)，考虑累积的总量(Total Amount)；</li><li>微分方程(Differential Equations)，包括解决办法和斜率场(Slope Fields)；</li></ul><h3 id="Ⅳ-能够应用上述微积分-Calculus-的概念，无论是用代数-Algebraically-表达函数、用图形表达函数还是用表格表达函数。"><a href="#Ⅳ-能够应用上述微积分-Calculus-的概念，无论是用代数-Algebraically-表达函数、用图形表达函数还是用表格表达函数。" class="headerlink" title="Ⅳ.能够应用上述微积分(Calculus)的概念，无论是用代数(Algebraically)表达函数、用图形表达函数还是用表格表达函数。"></a>Ⅳ.能够应用上述微积分(Calculus)的概念，无论是用代数(Algebraically)表达函数、用图形表达函数还是用表格表达函数。</h3><h3 id="Ⅴ-如何在考试中发挥得最好"><a href="#Ⅴ-如何在考试中发挥得最好" class="headerlink" title="Ⅴ.如何在考试中发挥得最好"></a>Ⅴ.如何在考试中发挥得最好</h3><ul><li>回答所有的选择题(Multiple-choice Questions)；</li><li>了解什么时候可以使用计算器(Calculator)，什么时候不能使用，并且学会使用计算器；</li><li>规范你的书写表达方式；知道如何回答自由解答题；</li></ul><h2 id="BC"><a href="#BC" class="headerlink" title="BC"></a>BC</h2><h3 id="Ⅰ-考试要点一"><a href="#Ⅰ-考试要点一" class="headerlink" title="Ⅰ.考试要点一"></a>Ⅰ.考试要点一</h3><ul><li>掌握针对AP微积分AB考试列出来的5大要点。这部分所列的问题直接决定了参加AB考生的考试成绩，并且这些问题还是学习BC部分的基础和所必须掌握的。</li></ul><h3 id="Ⅱ-考试要点二"><a href="#Ⅱ-考试要点二" class="headerlink" title="Ⅱ.考试要点二"></a>Ⅱ.考试要点二</h3><p>在AP微积分AB的基础上，下列知识点有所扩展：</p><ul><li>使用洛必达法则(L’Hopital’s Rule)计算不定型的极限(Limits of Indeterminate Forms)；</li><li>使用极限分析和求解反常积分(Improper Integrals)；</li><li>解决logistic型微分方程和使用欧拉方法(Euler’s Method)估算分析；</li><li>使用分步积分法(Integration by Parts)和部分分数法(Partial Fractions)求解积分(Finding Antiderivatives)；</li><li>求解弧线长(Arc Lengths)</li></ul><h3 id="Ⅲ-考试要点三"><a href="#Ⅲ-考试要点三" class="headerlink" title="Ⅲ.考试要点三"></a>Ⅲ.考试要点三</h3><ul><li>掌握参数函数(Parametrically Defined Functions)和极坐标函数(Polar Functions)。</li><li>有能力使用参数函数和极坐标函数应用于微积分的概念。</li></ul><h3 id="Ⅳ-考试要点四"><a href="#Ⅳ-考试要点四" class="headerlink" title="Ⅳ.考试要点四"></a>Ⅳ.考试要点四</h3><ul><li>掌握两个维度的运动分析。</li><li>掌握如何分析位置(Position)，速度(Velocity)，瞬时速度(Speed)，加速度(Acceleration)，物体运动的距离(Distance)以及使用向量(Vectors)微积分的概念分析在两个维度上的运动。</li></ul><h3 id="Ⅴ-考试要点五（无穷级数-Infinite-Series"><a href="#Ⅴ-考试要点五（无穷级数-Infinite-Series" class="headerlink" title="Ⅴ.考试要点五（无穷级数-Infinite Series)"></a>Ⅴ.考试要点五（无穷级数-Infinite Series)</h3><ul><li>分析一个级数的敛散性(Converges or Diverges)；</li><li>使用泰勒理论(Taylor’s Theorem)表示函数的幂级数(Power Series)；</li><li>确定幂级数的收敛区间(The Interval of Convergence)；</li><li>估算级数的误差边界(Bounds on the Error)。</li></ul><h1 id="词汇表"><a href="#词汇表" class="headerlink" title="词汇表"></a>词汇表</h1><table><thead><tr><th style="text-align:left">英文</th><th style="text-align:left">中文</th></tr></thead><tbody><tr><td style="text-align:left">open interval</td><td style="text-align:left">开区间</td></tr><tr><td style="text-align:left">closed interval</td><td style="text-align:left">闭区间</td></tr><tr><td style="text-align:left">length of an interval</td><td style="text-align:left">区间长度</td></tr><tr><td style="text-align:left">domain</td><td style="text-align:left">定义域</td></tr><tr><td style="text-align:left">range</td><td style="text-align:left">值域</td></tr><tr><td style="text-align:left">independent variable</td><td style="text-align:left">自变量</td></tr><tr><td style="text-align:left">intermediate variable</td><td style="text-align:left">中间变是</td></tr><tr><td style="text-align:left">function</td><td style="text-align:left">函数</td></tr><tr><td style="text-align:left">sign function</td><td style="text-align:left">符号函数</td></tr><tr><td style="text-align:left">composite function</td><td style="text-align:left">复合函数</td></tr><tr><td style="text-align:left">piecewise function</td><td style="text-align:left">分段函数</td></tr><tr><td style="text-align:left">elementary function</td><td style="text-align:left">初等函数</td></tr><tr><td style="text-align:left">function property</td><td style="text-align:left">函数性质</td></tr><tr><td style="text-align:left">even function</td><td style="text-align:left">偶函数</td></tr><tr><td style="text-align:left">odd function</td><td style="text-align:left">奇函数</td></tr><tr><td style="text-align:left">periodic function</td><td style="text-align:left">周期函数</td></tr><tr><td style="text-align:left">monotone function</td><td style="text-align:left">单调函数</td></tr><tr><td style="text-align:left">inverse function</td><td style="text-align:left">反函数</td></tr><tr><td style="text-align:left">power function</td><td style="text-align:left">幂函数</td></tr><tr><td style="text-align:left">exponential function</td><td style="text-align:left">指数函数</td></tr><tr><td style="text-align:left">logarithmic function</td><td style="text-align:left">对数函数</td></tr><tr><td style="text-align:left">trigonometric function</td><td style="text-align:left">三角函数</td></tr><tr><td style="text-align:left">inverse trigonometric fun ction</td><td style="text-align:left">反三角函数</td></tr><tr><td style="text-align:left">parametric function</td><td style="text-align:left">含参函数</td></tr><tr><td style="text-align:left">polar function</td><td style="text-align:left">极（坐标）函数</td></tr><tr><td style="text-align:left">vector function</td><td style="text-align:left">向量函数</td></tr><tr><td style="text-align:left">transforming function</td><td style="text-align:left">函数变换</td></tr><tr><td style="text-align:left">operation of function</td><td style="text-align:left">函数运算</td></tr><tr><td style="text-align:left">add、subtract</td><td style="text-align:left">加、减</td></tr><tr><td style="text-align:left">multiply、divide</td><td style="text-align:left">乘、除</td></tr><tr><td style="text-align:left">Sum、difference</td><td style="text-align:left">和、差</td></tr><tr><td style="text-align:left">product、quotient</td><td style="text-align:left">积、商</td></tr><tr><td style="text-align:left">Trigonometric identity</td><td style="text-align:left">三角恒等式</td></tr><tr><td style="text-align:left">Pythagorean identities</td><td style="text-align:left">毕达哥斯拉等式</td></tr><tr><td style="text-align:left">double-angle formula</td><td style="text-align:left">两倍角公式</td></tr><tr><td style="text-align:left">power-reducing formula</td><td style="text-align:left">降幂公式</td></tr><tr><td style="text-align:left">sum formula</td><td style="text-align:left">和角公式</td></tr><tr><td style="text-align:left">difference formula</td><td style="text-align:left">差角公式</td></tr><tr><td style="text-align:left">Polar equation</td><td style="text-align:left">极坐标方程</td></tr><tr><td style="text-align:left">vertex</td><td style="text-align:left">顶点</td></tr><tr><td style="text-align:left">polar coordinate</td><td style="text-align:left">极坐标</td></tr><tr><td style="text-align:left">polynomial</td><td style="text-align:left">多项式</td></tr><tr><td style="text-align:left">limit</td><td style="text-align:left">极限</td></tr><tr><td style="text-align:left">approach</td><td style="text-align:left">接近，靠近</td></tr><tr><td style="text-align:left">left-hand limit</td><td style="text-align:left">左极限</td></tr><tr><td style="text-align:left">right-hand limit</td><td style="text-align:left">右极限</td></tr><tr><td style="text-align:left">Infinity</td><td style="text-align:left">无穷</td></tr><tr><td style="text-align:left">positive infinity</td><td style="text-align:left">正无穷</td></tr><tr><td style="text-align:left">negative infinity</td><td style="text-align:left">负无穷</td></tr><tr><td style="text-align:left">Mathematical terminology</td><td style="text-align:left">数学术语</td></tr><tr><td style="text-align:left">algebraical</td><td style="text-align:left">代数的</td></tr><tr><td style="text-align:left">coefficient</td><td style="text-align:left">系数</td></tr><tr><td style="text-align:left">the highest power of x</td><td style="text-align:left">X最高次项</td></tr><tr><td style="text-align:left">numerator</td><td style="text-align:left">分子</td></tr><tr><td style="text-align:left">denominator</td><td style="text-align:left">分母</td></tr><tr><td style="text-align:left">radians</td><td style="text-align:left">弧度</td></tr><tr><td style="text-align:left">degrees</td><td style="text-align:left">角度</td></tr><tr><td style="text-align:left">expand and simplify</td><td style="text-align:left">展开化简</td></tr><tr><td style="text-align:left">factor…out of</td><td style="text-align:left">约去</td></tr><tr><td style="text-align:left">sketch the function</td><td style="text-align:left">画函数图像</td></tr><tr><td style="text-align:left">multiply the top and the bottom of the expression by</td><td style="text-align:left">表达式上下都乘以</td></tr><tr><td style="text-align:left">derivative</td><td style="text-align:left">导数</td></tr><tr><td style="text-align:left">differential</td><td style="text-align:left">微分的，微分</td></tr><tr><td style="text-align:left">find derivative</td><td style="text-align:left">求导</td></tr><tr><td style="text-align:left">difference quotient</td><td style="text-align:left">差商</td></tr><tr><td style="text-align:left">differentiability</td><td style="text-align:left">可微性</td></tr><tr><td style="text-align:left">differentiable</td><td style="text-align:left">可微的</td></tr><tr><td style="text-align:left">slope</td><td style="text-align:left">斜率</td></tr><tr><td style="text-align:left">steepness</td><td style="text-align:left">倾斜度</td></tr><tr><td style="text-align:left">secant line</td><td style="text-align:left">割线</td></tr><tr><td style="text-align:left">normal line</td><td style="text-align:left">法线</td></tr><tr><td style="text-align:left">tangent line</td><td style="text-align:left">切线</td></tr><tr><td style="text-align:left">conjugate</td><td style="text-align:left">共轭</td></tr><tr><td style="text-align:left">plug……into……</td><td style="text-align:left">把…代入…</td></tr><tr><td style="text-align:left">divide A by B</td><td style="text-align:left">把A除以B</td></tr><tr><td style="text-align:left">infinitesimally small amoun t</td><td style="text-align:left">极小的数，无穷小</td></tr><tr><td style="text-align:left">take derivative</td><td style="text-align:left">求导</td></tr><tr><td style="text-align:left">differentiate</td><td style="text-align:left">求…的导数</td></tr><tr><td style="text-align:left">first derivative</td><td style="text-align:left">一阶导数</td></tr><tr><td style="text-align:left">second derivative</td><td style="text-align:left">二阶导数</td></tr><tr><td style="text-align:left">the power rule</td><td style="text-align:left">幂法则</td></tr><tr><td style="text-align:left">the addition rule</td><td style="text-align:left">加法法则</td></tr><tr><td style="text-align:left">the product rule</td><td style="text-align:left">乘法法则</td></tr><tr><td style="text-align:left">the quotient rule</td><td style="text-align:left">商法则</td></tr><tr><td style="text-align:left">chain rule</td><td style="text-align:left">链式法则</td></tr><tr><td style="text-align:left">figure out</td><td style="text-align:left">计算</td></tr><tr><td style="text-align:left">radical</td><td style="text-align:left">根式</td></tr><tr><td style="text-align:left">take the square root</td><td style="text-align:left">求平方根</td></tr><tr><td style="text-align:left">cross-multiply</td><td style="text-align:left">交叉相乘</td></tr><tr><td style="text-align:left">switch back and forth</td><td style="text-align:left">转换</td></tr><tr><td style="text-align:left">reciprocal</td><td style="text-align:left">倒数</td></tr><tr><td style="text-align:left">multiply A by B</td><td style="text-align:left">用A乘以B</td></tr><tr><td style="text-align:left">y terms of x</td><td style="text-align:left">用x表示y</td></tr><tr><td style="text-align:left">with respect to</td><td style="text-align:left">关于，对…</td></tr><tr><td style="text-align:left">corollary</td><td style="text-align:left">推论</td></tr><tr><td style="text-align:left">n-th derivative</td><td style="text-align:left">n阶翻</td></tr><tr><td style="text-align:left">higher order derivative</td><td style="text-align:left">高阶导数</td></tr><tr><td style="text-align:left">equation of tangent line</td><td style="text-align:left">切线方程</td></tr><tr><td style="text-align:left">equation of normal line</td><td style="text-align:left">法线方程</td></tr><tr><td style="text-align:left">perpendicular</td><td style="text-align:left">垂直的</td></tr><tr><td style="text-align:left">horizontal</td><td style="text-align:left">水平的</td></tr><tr><td style="text-align:left">parallel to</td><td style="text-align:left">平行于</td></tr><tr><td style="text-align:left">negative reciprocal</td><td style="text-align:left">负导数</td></tr><tr><td style="text-align:left">original equation</td><td style="text-align:left">原方程</td></tr><tr><td style="text-align:left">root</td><td style="text-align:left">根</td></tr><tr><td style="text-align:left">x-intercept</td><td style="text-align:left">X轴的截距</td></tr><tr><td style="text-align:left">rough</td><td style="text-align:left">大致的</td></tr><tr><td style="text-align:left">absolute</td><td style="text-align:left">绝对最大</td></tr><tr><td style="text-align:left">extreme maximum</td><td style="text-align:left">最大值</td></tr><tr><td style="text-align:left">relative</td><td style="text-align:left">相对最大</td></tr><tr><td style="text-align:left">local maximum</td><td style="text-align:left">极大值</td></tr><tr><td style="text-align:left">extreme value</td><td style="text-align:left">极值</td></tr><tr><td style="text-align:left">optimal value</td><td style="text-align:left">最优值</td></tr><tr><td style="text-align:left">critical value</td><td style="text-align:left">临界值</td></tr><tr><td style="text-align:left">critical point</td><td style="text-align:left">临界点</td></tr><tr><td style="text-align:left">inflection</td><td style="text-align:left">拐点</td></tr><tr><td style="text-align:left">analytic geometry</td><td style="text-align:left">解析几何</td></tr><tr><td style="text-align:left">vertex</td><td style="text-align:left">顶点</td></tr><tr><td style="text-align:left">dimension</td><td style="text-align:left">尺度，维数</td></tr><tr><td style="text-align:left">semicircle</td><td style="text-align:left">半圆</td></tr><tr><td style="text-align:left">diameter</td><td style="text-align:left">直径</td></tr><tr><td style="text-align:left">inscribed</td><td style="text-align:left">内接</td></tr><tr><td style="text-align:left">ellipse</td><td style="text-align:left">椭圆</td></tr><tr><td style="text-align:left">length</td><td style="text-align:left">长</td></tr><tr><td style="text-align:left">width</td><td style="text-align:left">宽</td></tr><tr><td style="text-align:left">perimeter、 circumference</td><td style="text-align:left">周长</td></tr><tr><td style="text-align:left">area</td><td style="text-align:left">面积</td></tr><tr><td style="text-align:left">surface area</td><td style="text-align:left">表面积</td></tr><tr><td style="text-align:left">volume</td><td style="text-align:left">体积</td></tr><tr><td style="text-align:left">cubic</td><td style="text-align:left">立方体的</td></tr><tr><td style="text-align:left">cylindrical</td><td style="text-align:left">圆柱的</td></tr><tr><td style="text-align:left">right triangle</td><td style="text-align:left">直角三角形</td></tr><tr><td style="text-align:left">equilateral triangle</td><td style="text-align:left">等边三角形</td></tr><tr><td style="text-align:left">isosceles triangle</td><td style="text-align:left">等腰三角形</td></tr><tr><td style="text-align:left">parabola</td><td style="text-align:left">拋物线</td></tr><tr><td style="text-align:left">rectangular prism</td><td style="text-align:left">长方体</td></tr><tr><td style="text-align:left">sphere</td><td style="text-align:left">球体</td></tr><tr><td style="text-align:left">spherical balloon</td><td style="text-align:left">气球</td></tr><tr><td style="text-align:left">cone</td><td style="text-align:left">锥</td></tr><tr><td style="text-align:left">conical tank</td><td style="text-align:left">圆锥</td></tr><tr><td style="text-align:left">right circular cone</td><td style="text-align:left">直圆锥</td></tr><tr><td style="text-align:left">oblique circular cone</td><td style="text-align:left">斜圆锥</td></tr><tr><td style="text-align:left">concavity</td><td style="text-align:left">凹度，凹形</td></tr><tr><td style="text-align:left">concave up</td><td style="text-align:left">凹</td></tr><tr><td style="text-align:left">concave down</td><td style="text-align:left">凸</td></tr><tr><td style="text-align:left">particle</td><td style="text-align:left">粒子，质点</td></tr><tr><td style="text-align:left">velocity</td><td style="text-align:left">速度(矢畺）</td></tr><tr><td style="text-align:left">speed</td><td style="text-align:left">速率(标畺）</td></tr><tr><td style="text-align:left">acceleration</td><td style="text-align:left">加速度</td></tr><tr><td style="text-align:left">position</td><td style="text-align:left">位置</td></tr><tr><td style="text-align:left">distance</td><td style="text-align:left">距离</td></tr><tr><td style="text-align:left">displacement</td><td style="text-align:left">位移</td></tr><tr><td style="text-align:left">odometer</td><td style="text-align:left">里程表</td></tr><tr><td style="text-align:left">related rate</td><td style="text-align:left">相关变化率</td></tr><tr><td style="text-align:left">slid toward</td><td style="text-align:left">朝…滑行</td></tr><tr><td style="text-align:left">slow down</td><td style="text-align:left">减速</td></tr><tr><td style="text-align:left">speed up</td><td style="text-align:left">加速</td></tr><tr><td style="text-align:left">elevation angle</td><td style="text-align:left">仰角</td></tr><tr><td style="text-align:left">altitude</td><td style="text-align:left">高度，高度</td></tr><tr><td style="text-align:left">substitute back</td><td style="text-align:left">回代</td></tr><tr><td style="text-align:left">cartesian</td><td style="text-align:left">直角坐标系的</td></tr><tr><td style="text-align:left">voltage</td><td style="text-align:left">电压</td></tr><tr><td style="text-align:left">current</td><td style="text-align:left">电流</td></tr><tr><td style="text-align:left">resistance</td><td style="text-align:left">电阻</td></tr><tr><td style="text-align:left">circuit</td><td style="text-align:left">电路</td></tr><tr><td style="text-align:left">differential</td><td style="text-align:left">微分</td></tr><tr><td style="text-align:left">linearization</td><td style="text-align:left">线性化</td></tr><tr><td style="text-align:left">quantity</td><td style="text-align:left">数量</td></tr><tr><td style="text-align:left">error</td><td style="text-align:left">误差</td></tr><tr><td style="text-align:left">approximation</td><td style="text-align:left">近似</td></tr><tr><td style="text-align:left">the Indefinite Integral</td><td style="text-align:left">不定积分</td></tr><tr><td style="text-align:left">antiderivative</td><td style="text-align:left">原函数，不定积分</td></tr><tr><td style="text-align:left">integration</td><td style="text-align:left">积分法</td></tr><tr><td style="text-align:left">integrand</td><td style="text-align:left">被积函数</td></tr><tr><td style="text-align:left">U-substitution</td><td style="text-align:left">U代换</td></tr><tr><td style="text-align:left">corollary</td><td style="text-align:left">推论</td></tr><tr><td style="text-align:left">natural logarithm</td><td style="text-align:left">自然对数</td></tr><tr><td style="text-align:left">absolute value mark</td><td style="text-align:left">绝对值符号</td></tr><tr><td style="text-align:left">eliminate</td><td style="text-align:left">除去，消去</td></tr><tr><td style="text-align:left">the Definite Integral</td><td style="text-align:left">定积分</td></tr><tr><td style="text-align:left">rectangle</td><td style="text-align:left">矩形</td></tr><tr><td style="text-align:left">trapezoid</td><td style="text-align:left">梯形</td></tr><tr><td style="text-align:left">inscribed</td><td style="text-align:left">内接</td></tr><tr><td style="text-align:left">circumscribed</td><td style="text-align:left">外接</td></tr><tr><td style="text-align:left">converge</td><td style="text-align:left">收敛</td></tr><tr><td style="text-align:left">diverge</td><td style="text-align:left">发散</td></tr><tr><td style="text-align:left">applications of Integral</td><td style="text-align:left">积分的应用</td></tr><tr><td style="text-align:left">washers method</td><td style="text-align:left">“垫圈”法</td></tr><tr><td style="text-align:left">disk method</td><td style="text-align:left">圆盘法</td></tr><tr><td style="text-align:left">vertical slices</td><td style="text-align:left">垂直切片</td></tr><tr><td style="text-align:left">horizontal slices</td><td style="text-align:left">水平切片</td></tr><tr><td style="text-align:left">infinitely thin strips</td><td style="text-align:left">无限薄条</td></tr><tr><td style="text-align:left">intersect</td><td style="text-align:left">相交</td></tr><tr><td style="text-align:left">cylindrical shell method</td><td style="text-align:left">圆柱壳法</td></tr><tr><td style="text-align:left">cross-section</td><td style="text-align:left">横截面</td></tr><tr><td style="text-align:left">isosceles right triangle</td><td style="text-align:left">等腰直用三角形</td></tr><tr><td style="text-align:left">hypotenuse</td><td style="text-align:left">斜边</td></tr><tr><td style="text-align:left">set up but do not evaluate the integral</td><td style="text-align:left">只需列式，不用求值</td></tr><tr><td style="text-align:left">differential equation</td><td style="text-align:left">微分方程</td></tr><tr><td style="text-align:left">separation of variable</td><td style="text-align:left">变畺分离</td></tr><tr><td style="text-align:left">be proportional to</td><td style="text-align:left">成比例</td></tr><tr><td style="text-align:left">exponential growth rate</td><td style="text-align:left">指数增长</td></tr><tr><td style="text-align:left">colony</td><td style="text-align:left">菌落</td></tr><tr><td style="text-align:left">radioactive</td><td style="text-align:left">放射性的</td></tr><tr><td style="text-align:left">infinite series</td><td style="text-align:left">无穷级数</td></tr><tr><td style="text-align:left">sequences</td><td style="text-align:left">数列</td></tr><tr><td style="text-align:left">series</td><td style="text-align:left">级数</td></tr><tr><td style="text-align:left">a sequence of number</td><td style="text-align:left">数列</td></tr><tr><td style="text-align:left">succession</td><td style="text-align:left">连续</td></tr><tr><td style="text-align:left">subscript</td><td style="text-align:left">下标</td></tr><tr><td style="text-align:left">partial sum</td><td style="text-align:left">部分和</td></tr><tr><td style="text-align:left">the nth term of a sequence</td><td style="text-align:left">数列的第n项</td></tr><tr><td style="text-align:left">nonzero term</td><td style="text-align:left">非零项</td></tr><tr><td style="text-align:left">the harmonic series</td><td style="text-align:left">调和级数</td></tr><tr><td style="text-align:left">geometric series</td><td style="text-align:left">几何级数</td></tr><tr><td style="text-align:left">alternating series</td><td style="text-align:left">交错级数</td></tr><tr><td style="text-align:left">power series</td><td style="text-align:left">幂级数</td></tr><tr><td style="text-align:left">alternating harmonic series</td><td style="text-align:left">交错调和级数</td></tr><tr><td style="text-align:left">Taylor series</td><td style="text-align:left">泰勒级数</td></tr><tr><td style="text-align:left">Maclaurin series</td><td style="text-align:left">麦克劳林级数</td></tr><tr><td style="text-align:left">ratio test</td><td style="text-align:left">比值检验法</td></tr><tr><td style="text-align:left">integal test</td><td style="text-align:left">积分审敛法</td></tr><tr><td style="text-align:left">comparison test</td><td style="text-align:left">比较审敛法</td></tr><tr><td style="text-align:left">convergence</td><td style="text-align:left">收敛</td></tr><tr><td style="text-align:left">absolute convergence</td><td style="text-align:left">绝对收敛</td></tr><tr><td style="text-align:left">radius of convergence</td><td style="text-align:left">收敛半径</td></tr><tr><td style="text-align:left">conditional convergence</td><td style="text-align:left">条件收敛</td></tr><tr><td style="text-align:left">interval of convergence</td><td style="text-align:left">收敛区间</td></tr><tr><td style="text-align:left">diverge</td><td style="text-align:left">发散</td></tr><tr><td style="text-align:left">error bound</td><td style="text-align:left">误差限</td></tr><tr><td style="text-align:left">Lagrange error</td><td style="text-align:left">拉格朗日误差</td></tr><tr><td style="text-align:left">the neighborhood of the po int</td><td style="text-align:left">某点的邻域</td></tr><tr><td style="text-align:left">a third degree Taylor polynomial</td><td style="text-align:left">三阶泰勒多项式</td></tr></tbody></table><h1 id="计算器的使用"><a href="#计算器的使用" class="headerlink" title="计算器的使用"></a>计算器的使用</h1><h2 id="使用规定"><a href="#使用规定" class="headerlink" title="使用规定"></a>使用规定</h2><ol><li>考生必须持用美国大学委员会(The College Board)规定的图形计算器参加考试。</li><li>允许考生携带两台图形计算器，但不允许在考场上借用其它同学的图形计算器。</li><li>图形计算器记忆器中存储的数据和程序进入考场前清空。下表带星（*）号的图形计算器型号内置了记忆功能。</li></ol><h2 id="计算器模拟软件"><a href="#计算器模拟软件" class="headerlink" title="计算器模拟软件"></a>计算器模拟软件</h2></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-gallery&quot; &lt;p=&quot;&quot;&gt;AP微积分考试的相关内容，持续更新中&lt;br&gt;
    
    </summary>
    
      <category term="AP" scheme="https://jerrynju.github.io/categories/AP/"/>
    
    
      <category term="AP" scheme="https://jerrynju.github.io/tags/AP/"/>
    
      <category term="Calculus" scheme="https://jerrynju.github.io/tags/Calculus/"/>
    
      <category term="教学笔记" scheme="https://jerrynju.github.io/tags/%E6%95%99%E5%AD%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Markdown渲染引擎测试</title>
    <link href="https://jerrynju.github.io/2018/01/14/test-md/"/>
    <id>https://jerrynju.github.io/2018/01/14/test-md/</id>
    <published>2018-01-14T10:43:49.000Z</published>
    <updated>2018-02-04T03:05:16.218Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <p="">此页面主要用于测试hexo的Markdown渲染引擎显示效果。$\latex$<br>请使用基于<em>Chrome</em>的浏览器打开<br><a id="more"></a><p></p><h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><p>公式测试：\( y=x^2 \)<br>行间公式:<br>$$y=\frac{1}{2}E_x^2$$<br>行内公式: $y=x^2$</p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>传入存储在腾讯云的外链图片<br><a href="https://jerryhexo-1255752747.cos.ap-chengdu.myqcloud.com/%E6%B5%8B%E8%AF%95%E5%9B%BE%E7%89%87PNG.png" title="图片测试" class="gallery-item" target="_blank" rel="noopener"><img src="https://jerryhexo-1255752747.cos.ap-chengdu.myqcloud.com/%E6%B5%8B%E8%AF%95%E5%9B%BE%E7%89%87PNG.png" alt="图片测试"></a></p><h1 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h1><h2 id="存储在私有腾讯云中的视频"><a href="#存储在私有腾讯云中的视频" class="headerlink" title="存储在私有腾讯云中的视频"></a>存储在私有腾讯云中的视频</h2><video src="https://jerryhexo-1255752747.cos.ap-chengdu.myqcloud.com/%E5%AD%98%E6%A1%A3/%E8%A7%86%E9%A2%91/top10000career-trajectory.mp4" controls="controls" style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;">your browser does not support the video tag</video><h2 id="存储在优酷上的视频"><a href="#存储在优酷上的视频" class="headerlink" title="存储在优酷上的视频"></a>存储在优酷上的视频</h2><p>使用hexo-tag-youku插件实现</p><iframe height="480" width="400" src="http://player.youku.com/embed/XMTQ2MjU2NTU2OA" frameborder="0" allowfullscreen></iframe><h1 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="430" height="86" src="//music.163.com/outchain/player?type=2&id=114389&auto=0&height=66"></iframe><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> love</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">hexotest</span>&#123;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Program</span>      </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">enum</span> GameState:<span class="keyword">byte</span>                               <span class="comment">//（：byte）是我把它的默认类型改成成了byte(类型可以自己定),默认为整形  </span></span><br><span class="line">       &#123;    </span><br><span class="line">            GameExit,      </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">static</span> GameState gameState =GameState.GameStart;  <span class="comment">//声明一个枚举变量并给它初始化赋值  </span></span><br><span class="line">          </span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)  </span></span><br><span class="line"><span class="function">        </span>&#123;  </span><br><span class="line">            <span class="keyword">switch</span>(gameState)  </span><br><span class="line">            &#123;  </span><br><span class="line">                <span class="keyword">case</span> GameState.GameStart:  </span><br><span class="line">                    Console.WriteLine(<span class="string">"游戏开始&#123;0&#125;"</span>,gameState);  </span><br><span class="line">                    <span class="keyword">break</span>;  </span><br><span class="line">                <span class="keyword">case</span> GameState.GameExit:  </span><br><span class="line">                    Console.WriteLine(<span class="string">"游戏开始对应的值：&#123;0&#125; 名称&#123;1&#125;"</span>, (<span class="keyword">byte</span>)gameState, gameState);  </span><br><span class="line">                    <span class="keyword">break</span>;  </span><br><span class="line">            &#125;            </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> csharp code</span><br></pre></td></tr></table></figure><h1 id="Bootstrap-Callout"><a href="#Bootstrap-Callout" class="headerlink" title="Bootstrap Callout"></a>Bootstrap Callout</h1><div class="note info"><p>Content (md partial supported) </p></div><h1 id="居中引用"><a href="#居中引用" class="headerlink" title="居中引用"></a>居中引用</h1><!-- 标签别名 --><blockquote class="blockquote-center"><p>blah blah blah </p></blockquote><h1 id="插入交互式echarts图形"><a href="#插入交互式echarts图形" class="headerlink" title="插入交互式echarts图形"></a>插入交互式echarts图形</h1><div id="echarts1592" style="width: 81%;height: 400px;margin: 0 auto"></div><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts1592'));        // 指定图表的配置项和数据        var option = {    tooltip : {        trigger: 'axis',        axisPointer : {            // 坐标轴指示器，坐标轴触发有效            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'        }    },    legend: {        data:['利润', '支出', '收入']    },    grid: {        left: '3%',        right: '4%',        bottom: '3%',        containLabel: true    },    xAxis : [        {            type : 'value'        }    ],    yAxis : [        {            type : 'category',            axisTick : {show: false},            data : ['周一','周二','周三','周四','周五','周六','周日']        }    ],    series : [        {            name:'利润',            type:'bar',            itemStyle : {                normal: {                    label: {show: true, position: 'inside'}                }            },            data:[200, 170, 240, 244, 200, 220, 210]        },        {            name:'收入',            type:'bar',            stack: '总量',            itemStyle: {                normal: {                    label : {show: true}                }            },            data:[320, 302, 341, 374, 390, 450, 420]        },        {            name:'支出',            type:'bar',            stack: '总量',            itemStyle: {normal: {                label : {show: true, position: 'left'}            }},            data:[-120, -132, -101, -134, -190, -230, -210]        }    ]};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script><h1 id="插入流程图"><a href="#插入流程图" class="headerlink" title="插入流程图"></a>插入流程图</h1><div id="flowchart-0" class="flow-chart"></div><h1 id="矢量svg图片"><a href="#矢量svg图片" class="headerlink" title="矢量svg图片"></a>矢量svg图片</h1><p>直接使用Markdown语法以图片插入<br><a href="/images/geogebra-export.svg" title="svg图片" class="gallery-item"><img src="/images/geogebra-export.svg" alt="svg图片"></a><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Start|past:>http://www.google.com[blank]e=>end: End:>http://www.google.comop1=>operation: My Operation|pastop2=>operation: Stuff|currentsub1=>subroutine: My Subroutine|invalidcond=>condition: Yesor No?|approved:>http://www.google.comc2=>condition: Good idea|rejectedio=>inputoutput: catch something...|requestst->op1(right)->condcond(yes, right)->c2cond(no)->sub1(left)->op1c2(yes)->io->ec2(no)->op2->e</textarea><textarea id="flowchart-0-options" style="display: none">{"theme":"simple","scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script></p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-gallery&quot; &lt;p=&quot;&quot;&gt;此页面主要用于测试hexo的Markdown渲染引擎显示效果。$\latex$&lt;br&gt;请使用基于&lt;em&gt;Chrome&lt;/em&gt;的浏览器打开&lt;br&gt;
    
    </summary>
    
    
      <category term="Mardown" scheme="https://jerrynju.github.io/tags/Mardown/"/>
    
      <category term="Writing" scheme="https://jerrynju.github.io/tags/Writing/"/>
    
      <category term="Coding" scheme="https://jerrynju.github.io/tags/Coding/"/>
    
  </entry>
  
</feed>
